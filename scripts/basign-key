#!/bin/bash

auto_detect=false

usage() {
	cat <<EOF
usage: basign-key -s <key_to_sign_with> -s <key_to_sign> -m

  -u <key>   Specify the key to sign with.
  -s <key>   Specify the key to sign.
  -m         Try to autodetect a master key to sign with. Using this with -u is an error.
EOF
}

parse_args() {
	while [[ "$1" ]] ; do
		case "$1" in
			-u)
				key_to_use=$2
				shift
				;;
			-s)
				key_to_sign=$2
				shift
				;;
			-m)
				auto_detect=true
				;;
			-h)
				usage
				exit
				;;
			*)
				usage
				exit 1
				;;
		esac
		shift
	done

	if $auto_detect && [[ -n "$key_to_use" ]] ; then
		usage
		exit 1
	fi
}

auto_detect_key() {
	if $auto_detect ; then
		key_to_use=$(gpg -K | grep -B1 'BlackArch Master' | head -n1 | awk '{ print $2 }' | cut -d/ -f2)
		if [[ -z "$key_to_use" ]] ; then
			err 'failed to auto-detect a master key.'
			exit 1
		fi
	fi

	echo "auto-detected master key: $key_to_use"
}

check_keys() {
	if [[ -z "$key_to_use" || -z "$key_to_sign" ]] ; then
		usage
		exit 1
	fi
}

get_key() {
	gpg --keyserver hkp://pgp.mit.edu --recv-key "$key_to_sign"
}

sign_key() {
	gpg --default-key "$key_to_use" --sign-key "$key_to_sign"
}

send_key() {
	gpg --keyserver hkp://pgp.mit.edu --send-keys "$key_to_sign"
}

main() {
	parse_args "$@"

	auto_detect_key
	check_keys

	get_key
	sign_key
	send_key
}

main "$@"
