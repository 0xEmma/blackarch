#!/bin/bash

export LC_ALL=C

shopt -s extglob

site=blackarch.org
sitedir=/nginx/var/www
# override with -r
repo=blackarch-testing
# override with -u
user=$USER

we_started_ssh=false

usage() {
	cat <<EOF
usage: baclean [-u <user>] [-r <repo>] [-h]

  -u <usage>    Set the ssh user.
  -r <repo>     Set the repo.
  -h            Display this message.
EOF
}

parse_args() {
	while (( $# )) ; do
		case "$1" in
			-r)
				repo=$2
				shift
				;;
			-u)
				user=$2
				shift
				;;
			-h)
				usage
				exit
				;;
			*)
				usage
				exit 1
				;;
		esac
		shift
	done
}

cleanup() {
	# Kill ssh-agent.
	$we_started_ssh && kill "$SSH_AGENT_PID" 2> /dev/null >&2
}

start_ssh_agent() {
	if [[ -z "$SSH_AGENT_PID" ]] ; then
		echo 'starting ssh-agent...'
		eval $(ssh-agent)
		ssh-add
		we_started_ssh=true
	else
		echo 'ssh-agent already started.'
	fi
}

# This runs on the remote host.
# This is not meant to be efficient or portable.
remote_old_cleanup() {
	echo 'cleaning old package files...'
	for a in i686 x86_64 ; do
		cd "$a"
		echo "ARCH: $a"
		for p in *.pkg.tar.xz ; do
			[[ -e "$p" ]] || continue
			pkgname=$(sed 's/-[^-]\+-[^-]\+-[^-]\+.pkg.tar.xz$//' <<< "$p")
			matched=("$pkgname"-+([!-])-+([!-])-+([!-]).pkg.tar.xz)
			for pm in "${matched[@]}" ; do
				if grep -q '[0-9]:' <<< "$pm" ; then
					echo "$pm"
				else
					# Since packages with epoches of zero do not include '0:'
					# in their names, we have to force them to the top.
					echo "0000$pm"
				fi
			done |
			sort -V | head -n-1 |
			sed 's/^0000//' |
			xargs -r rm -v
		done
		cd ..
	done
}

remote_removed_cleanup() {
	echo 'cleaning removed package files...'

	for a in i686 x86_64 ; do
		cd "$a"
		echo "ARCH: $a"
		zgrep %NAME% blackarch.db.tar.gz --no-group-separator -a -A1 |
		grep -v %NAME% > /tmp/package_list
		for p in *.pkg.tar.xz ; do
			pkgname=$(sed 's/-[^-]\+-[^-]\+-[^-]\+.pkg.tar.xz$//' <<< "$p")
			grep -q "^$pkgname$" /tmp/package_list || rm -v "$p"
		done
		cd ..
	done
	rm /tmp/package_list
}

main() {
	parse_args "$@"

	start_ssh_agent

	echo "cleaning repo: $repo..."

	# REMOVED
	ssh -l "$user" blackarch.org bash <<EOF
shopt -s extglob
cd '$sitedir/blackarch/$repo/os'
$(declare -f remote_removed_cleanup)
remote_removed_cleanup
EOF

	# OLD
	# The user's shell must be bash.
	# TODO: bash -c
	ssh -l "$user" blackarch.org bash <<EOF
shopt -s extglob
cd '$sitedir/blackarch/$repo/os'
$(declare -f remote_old_cleanup)
remote_old_cleanup
EOF
}

main "$@"
