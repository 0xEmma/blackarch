#!/bin/bash

cd "$(dirname "$0")"

do_deletes=false
sign=true

archs=(x86_64 i686)
real_repo=$(realpath ../real-repo)
build_repo=$(realpath ../repo)

get_name() {
	tar xJf "$1" .PKGINFO --force-local -O 2> /dev/null | grep '^pkgname' | cut -d' ' -f3
}

get_version() {
	tar xJf "$1" .PKGINFO --force-local -O 2> /dev/null | grep '^pkgver' | cut -d' ' -f3
}

find_package() {
	for p in "$1/$2"*.pkg.tar.xz ; do
		#shopt -s errorglob
		if tar xJf "$p" .PKGINFO -O 2> /dev/null --force-local | grep -q "pkgname = $2\$" ; then
			echo "$p"
			return 0
		else
			return 1
		fi
	done
}

for arch in $archs ; do
	echo >&2 "arch: $arch"
	(
	cd "$build_repo/$arch"
	for new_package_file in *.pkg.tar.xz ; do
		new_name=$(get_name "$new_package_file")
		new_version=$(get_version "$new_package_file")

		echo -n >&2 "dealing with $new_name..."
		find_package "$real_repo/$arch" "$new_name" | read old_package old_version

		if [[ -n "$old_package" && "$old_version" != "$new_version" ]] ; then
			echo
			rm -v "$old_package"
			echo cp -v "$new_package_file" "$real_repo/$arch"
		else
			echo ' nah'
		fi
	done
	)
done
