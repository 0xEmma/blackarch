#!/bin/bash
# usage: make-repo [package_directory] [build_directory]
# May be run from anywhere. Must live in '$projectroot/scripts'.

sign=true
for arg ; do
	case "$arg" in
		--nosign|--test)
			sign=false
			;;
		*)
			echo >&2 "'$arg' not recognized."
			exit 1
			;;
	esac
done

if $sign ; then
	trap_exit() {
		# Kill gpg-agent.
		kill "$(cut -d: -f2 <<< "$GPG_AGENT_INFO")"
	}
	trap trap_exit EXIT

	# Start gpg-agent.
	[[ -z "$GPG_TTY" ]] && export GPG_TTY=$(tty)
	[[ -z "$GPG_AGENT_INFO" ]] && eval $(gpg-agent --daemon --default-cache-ttl 10000)

	# Cache keys
	gpg -s < /dev/null > /dev/null
fi

# Rights cache
sudo -v

# Don't use the X passphrase prompt.
#unset DISPLAY

basedir=$(realpath "$(dirname "$0")")
cd "$basedir/.."

pkgdir=$(realpath packages)
repodir=$(realpath repo)
builddir=$(realpath build)
mkdir -p "$repodir"
mkdir -p "$repodir/signatures"
mkdir -p "$builddir"
mkdir -p "$builddir"

cd packages

# Some of the sorts are sensitive. We don't want changing locales to mess
#  things up.
export LC_ALL=POSIX

comm -3 <(for pack in * ; do (
              source $pack/PKGBUILD
              for dep in ${depends[@]} ; do
                  [[ -d $dep ]] && echo $dep
              done
          ) done | sed 's/\(>\|<\|=\).*//' | sort -u) <(ls | sort) | 
while read item ; do
	echo 1 $item
	"$basedir/get-blackarch-deps" $item
done | sort -nr | sort -uk2 | sort -nr |
while read item ; do (
	# Extend cache timeout.
	sudo -v

	read depth pack <<< "$item"
	echo >&2 "Depth: $depth"
	echo >&2 "Name: $pack"

	echo >&2 'copying...'

	# packages/*/<package> -> build/<package>
	cp -fr "$pack" "$builddir"

	# Change into the build dir.
	cd "$builddir/$pack"

	echo >&2 'building...'

	# Remove old packages.
	rm -rf */
	rm -f *.{xz,gz,zip,bzip2,gunzip2,tgz,tar}

	# Build.
	if $sign ; then
		makepkg -s --nocheck --noconfirm --sign 2>&1
	else
		makepkg -s --nocheck --noconfirm 2>&1
	fi

	# Log errors.
	ret=$?
	if [[ $ret != 0 ]] ; then
		echo >&2 "<-!-> '$pack' failed with error code $ret"
		continue
	fi

	if $sign ; then
		# Move the signatures.
		# These may interfere with package installation.
		mv *.pkg.tar.xz.sig "$repodir/signatures" ||
		  echo >&2 "<-!-> '$pack' signing failed"
	fi

	# Install if necessary.
	if [[ $depth != 1 ]] ; then
		sudo pacman --asdeps --noconfirm -U *.pkg.tar.xz ||
		  echo "<-!-> '$pack' failed to install"
	fi

	# Move package into the repo.
	mv *.pkg.tar.xz "$repodir"
) done

# Put together a database.
cd "$repodir"

if $sign ; then
	mv signatures/* .
fi
repo-add blackarch.db.tar.gz *.pkg.tar.xz
