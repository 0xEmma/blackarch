#!/bin/bash

blackarch=$(dirname "$0")/..
chroot=$HOME/alt/blackarch
base=$HOME/alt/blackarch.base.qcow2
base_bak=$HOME/alt/blackarch.base.qcow2.bak
nbd=/dev/nbd6
arch=x86_64

if [[ $UID != 0 ]] ; then
	echo >&2 'must be root'
	exit 1
fi

clear_mounts() {
	cd /

	for mount in "${mounts[@]}" ; do
		echo "unmounting $mount..."
		umount "$mount"
	done

	mounts=()

	qemu-nbd -d "$nbd"
}
trap clear_mounts EXIT

track_mount() {
	#if mountpoint -q "$2" ; then
	#    echo >&2 "already mountpoint: $2"
	#    exit 1
	#fi

	mounts=("$2" "${mounts[@]}")
	mkdir -p "$2"
	mount "$@"

	echo "mounts now: ${mounts[@]}"
}

connect_nbd() {
	modprobe nbd max_part=63
	qemu-nbd -f qcow2 -c "$nbd" "$1"
}

set -e

# Parse args
while (( $# )) ; do
	case "$1" in
		--arch|-a)
			arch=$2
			shift
			;;
		init)
			echo 'making a new base image...'

			[[ -e "$base" ]] && mv -f "$base" "$base_bak"

			qemu-img create -f qcow2 "$base" 15G

			connect_nbd "$base"
			mkfs.ext4 "$nbd"
			track_mount "$nbd" "$chroot"

			# Strap
			echo 'strapping...'
			pacstrap -d "$chroot" base base-devel namcap zsh tmux sudo

			# Mirrorlist
			echo 'copying mirrorlist...'
			cp -f /etc/pacman.d/mirrorlist "$chroot/etc/pacman.d/mirrorlist"

			# User
			echo 'adding user...'
			arch-chroot "$chroot" groupadd test
			arch-chroot "$chroot" useradd -s /bin/zsh -g test -m test
			arch-chroot "$chroot" echo test:a \| chpasswd

			# Multilib
			echo 'modifying pacman.conf...'
			cat >> "$chroot/etc/pacman.conf" <<-EOF
			[multilib]
			Include = /etc/pacman.d/mirrorlist
			EOF
			echo 'taking care of gcc...'
			arch-chroot "$chroot" pacman --noconfirm -Rdd gcc gcc-libs binutils
			pacstrap -d "$chroot" gcc-multilib

			# Sudo
			echo 'modifying sudoers...'
			sed -i '/root ALL/a\test ALL=NOPASSWD: ALL' "$chroot/etc/sudoers"

			clear_mounts

			qemu-img snapshot -c base "$base"
			;;

		snaps)
			qemu-img snapshot -l "$base"
			;;

		clean)
			echo 'reverting to base snapshot...'
			qemu-img snapshot -a base "$base"

			echo >&2 'cleaning snapshots...'
			qemu-img snapshot -l "$base" | awk '{ print $2 }' |
			sed 1,2d | grep -v '^base$' |
			xargs -n1 -I{} qemu-img snapshot -d {} "$base"
			;;

		revert)
			echo 'reverting to base snapshot...'
			qemu-img snapshot -a base "$base"
			;;

		enter)
			echo 'diving into chroot...'

			connect_nbd "$base"
			track_mount "$nbd" "$chroot"

			if mountpoint -q "$chroot/proc" ; then
				echo 'already mounted.'
				chroot "$chroot" su - test
			else
				echo 'mounting...'

				track_mount "$blackarch" "$chroot/home/test" --bind
				track_mount "$chroot" "$chroot" --rbind
				arch-chroot "$chroot" su - test
			fi

			clear_mounts

			qemu-img snapshot -c build$RANDOM "$base"
			;;

		*)
			echo >&2 'invalid command.'
			exit 1
			;;
	esac
	shift
done
