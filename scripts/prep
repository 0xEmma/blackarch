#!/bin/bash
# Cleans up pkgbuild_tmp files.
# Spots that need manual checking are marked with 'TODO' comments.

# Simulates sponge from moreutils
_sponge() {
	tmp=$(mktemp /tmp/blackarch-prep.XXXXXXXXX)
	cat > "$tmp"
	mv "$tmp" "$1"
}

err() {
	echo >&2 "$*"
}

pkgbuild_tmp=$(mktemp /tmp/blackarch-prep.XXXXXXXX)
trap "rm -f $pkgbuild_tmp" EXIT

if (( $# < 1 )) ; then
	err "cleaning stdin..."
	cat > "$pkgbuild_tmp"
	output=/dev/stdout
else
	if [[ ! -r "$1" ]] ; then
		err "could not read '$1'."
		exit 1
	fi

	err "cleaning '$1'..."

	cat "$1" > "$pkgbuild_tmp"
	output=$1
fi

source "$pkgbuild_tmp"
# TODO: Fix this.
#namcap "$pkgbuild_tmp"

# Expand tabs to two spaces
if grep -q '^\t' "$pkgbuild_tmp" ; then
	err "expanding tabs..."
	expand -it2 "$pkgbuild_tmp" | _sponge "$pkgbuild_tmp"
fi

# Remove vim modeline
if grep -q '#\s*vim:' "$pkgbuild_tmp" ; then
	err "removing vim modeline..."
	sed -i '/#\s*vim:/d' "$pkgbuild_tmp"
fi

# Check license
#err "checking license..."
#for lic in "${license[@]}" ; do
#	if [[ ! "$lic" =~ \
#		   ^([Uu]nknown|[Cc]ustom.*|BSD|MIT|ZLIB|[Pp]ython)$ ]] ; then
#		[[ -z "$lic" ]] && err "'$pkgbuild_tmp' has no license."
#		[[ -e /usr/share/licenses/common/$lic ]] ||
#		err "'$pkgbuild_tmp' has invalid license: '$lic'"
#		sed -i '1i\# TODO: check license' "$pkgbuild_tmp"
#	fi
#done

# Remove Id comment
if grep -q '#\s*\$\s*Id:' "$pkgbuild_tmp" ; then
	err "removing id comment..."
	sed -i '/#\s*\$\s*Id:/d' "$pkgbuild_tmp"
fi

# Remove maintainer and contributor comments
if grep -q '#\s*\([Cc]ontributor\|[Mm]aintainer\)' "$pkgbuild_tmp" ; then
	err 'removing contributor and maintainer comments...'
	sed -i '/#\s*\([Cc]ontributor\|[Mm]aintainer\)/d' "$pkgbuild_tmp"
fi

# Squeeze extra blank lines (why does cat have this feature?)
# TODO: detect these
#err 'squeezing extra blank lines...'
cat -s "$pkgbuild_tmp" | _sponge "$pkgbuild_tmp"

# Remove '|| return'
if grep -q '||\s*return' "$pkgbuild_tmp" ; then
	err "removing '|| return'..."
	sed -i 's/||\s*return.*//' "$pkgbuild_tmp"
fi

# Check for package function
if ! grep -q 'package.*()' "$pkgbuild_tmp" ; then
	err "added TODO: make package function"
	sed -i '1i\# TODO: make package function' "$pkgbuild_tmp"
fi

# TODO: detect this
# Remove blank line at top
# This also adds a trailing newline if there isn't one already.
#err 'removing leading blank line...'
awk 'BEGIN{ i=0 } {
		if (!(/^$/ && i==0)) {
		   print
		}
		i++
	 }' "$pkgbuild_tmp" | _sponge "$pkgbuild_tmp"

# Check for startdir
# This is too difficult to fix automatically
if grep -q 'startdir' "$pkgbuild_tmp" ; then
	err 'added TODO: remove startdir'
	sed -i '1i\# TODO: remove startdir' "$pkgbuild_tmp"
fi

# Remove $pkgname
if grep -q '\$pkgname' "$pkgbuild_tmp" ; then
	err 'removing $pkgname...'
	sed -i "s/\\\$pkgname/$pkgname/g" "$pkgbuild_tmp"
fi

# Remove trailing whitespace
if grep -Eq '[[:space:]]+$' "$pkgbuild_tmp" ; then
	err 'removing trailing whitespace...'
	sed -i 's/[[:space:]]*$//' "$pkgbuild_tmp"
fi

cat "$pkgbuild_tmp" > "$output"
