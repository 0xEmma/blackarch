#!/bin/bash
# Cleans up PKGBUILD files.
# Spots that need manual checking are marked with 'TODO' comments.

pkgbuild=$1

if [[ ! -r "$pkgbuild" ]] ; then
	echo >&2 "could not read '$pkgbuild'."
	continue
fi
echo "cleaning '$pkgbuild'..."

# Expand tabs to two spaces
echo "expanding tabs..."
expand -it2 "$pkgbuild" | sponge "$pkgbuild"

# Remove vim modeline
echo "removing vim modeline..."
sed -i '/#\s*vim:/d' "$pkgbuild"

# Check license
echo "checking license..."
(
source "$pkgbuild"
for lic in "${license[@]}" ; do
	if [[ ! "$lic" =~ \
		   ^([Uu]nknown|[Cc]ustom|BSD|MIT|ZLIB|[Pp]ython)$ ]] ; then
		[[ -z "$lic" ]] && echo >&2 "'$pkgbuild' has no license."
		[[ -e /usr/share/licenses/common/$lic ]] ||
		echo >&2 "'$pkgbuild' has invalid license: '$lic'"
	fi
done
)

# Remove Id comment
echo "removing id comment..."
sed -i '/#\s*\$\s*Id:/d' "$pkgbuild"

# Remove maintainer and contributor comments
echo 'removing contributor and maintainer comments...'
sed -i '/#\s*\([Cc]ontributor\|[Mm]aintainer\)/d' "$pkgbuild"

# Squeeze extra blank lines (why does cat have this feature?)
echo 'squeezing extra blank lines...'
cat -s "$pkgbuild" | sponge "$pkgbuild"

# Remove '|| return'
echo "removing '|| return'..."
sed -i 's/||\s*return.*//' "$pkgbuild"

# Check for package function
if ! grep -q 'package.*()' "$pkgbuild" ; then
	sed -i '1i\# TODO: make package function' "$pkgbuild"
	echo >&2 "warning: no package function"
fi

# Remove trailing whitespace
if grep -Eq '[[:space:]]+$' "$pkgbuild" ; then
	echo "removing trailing whitespace..."
	sed -i 's/[[:space:]]+$//' "$pkgbuild"
fi

# Remove blank line at top
# This also adds a trailing newline if there isn't one already.
echo 'removing leading blank line...'
awk 'BEGIN{ i=0 } {
		if (!(/^$/ && i==0)) {
		   print
		}
		i++
	 }' "$pkgbuild" | sponge "$pkgbuild"

# Check for startdir
# This is too difficult to fix automatically
if grep -q 'startdir' "$pkgbuild" ; then
	echo 'warning: has startdir'
	sed -i '1i\# TODO: remove startdir' "$pkgbuild"
fi
