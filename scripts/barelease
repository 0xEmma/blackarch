#!/bin/sh
# Please excuse the multiple connections.
# This does not delete old package files. Absolutely do not try to do that
# manually.

site=blackarch.org
sitedir=/nginx/var/www
repo=blackarch-testing

lock() {
	if ! mkdir /tmp/blackarch.lck ; then
		echo >&2 'unable to obtain lock. remove /tmp/blackarch.lck perhaps?'
		exit 1
	fi
	chmod 000 /tmp/blackarch.lck
}

unlock() {
	rmdir /tmp/blackarch.lck
}

usage() {
	cat <<EOF
usage: barelease <package>
EOF
}

cleanup() {
	echo 'cleaning up...'

	# Kill gpg-agent.
	kill "$(cut -d: -f2 <<< "$GPG_AGENT_INFO")"

	# Kill ssh-agent.
	kill "$SSH_AGENT_PID"

	# Clean up temporary directory.
	rm -rf "$tmp"
}
trap cleanup EXIT

package=$1
shift

if [[ ! -r "$package" ]] ; then
	echo >&2 "unable to read package file: '$package'."
	exit 1
fi

if [[ "$package" != *.pkg.tar.xz ]] ; then
	echo >&2 "'$package' must have a .pkg.tar.xz extension."
	exit 1
fi

if [[ $package == *-any.pkg.tar.xz ]] ; then
	arch=(i686 x86_64)
elif [[ $package == *-x86_64.pkg.tar.xz ]] ; then
	arch=(x86_64)
elif [[ $package == *-i686.pkg.tar.xz ]] ; then
	arch=(i686)
else
	echo "unknown arch for '$package'"
	exit 1
fi

# gpg-agent
[[ -z "$GPG_TTY" ]] && export GPG_TTY=$(tty)
[[ -z "$GPG_AGENT_INFO" ]] && eval $(gpg-agent --daemon --default-cache-ttl 10000)

# ssh-agent
if [[ -z "$SSH_AGENT_PID" ]] ; then
	eval $(ssh-agent)
fi
ssh-add

tmp=$(mktemp /tmp/barelease.XXXXXXXX)

for a in "${arch[@]}" ; do
	echo "releasing for $a..."

	echo "obtaining lock..."
	ssh blackarch.org "$(export -f lock) lock"

	cp "$package" "$tmp"
	cd "$tmp"

	echo "pulling..."
	rsync --progress "$site:$sitedir/blackarch/$repo/os/$a/blackarch.db.tar.gz" .

	echo "signing and adding to database..."
	gpg --yes -b "$package"
	repo-add blackarch.db.tar.gz "$p"
	gpg --yes -b blackarch.db.tar.gz

	echo "pushing..."
	echo rsync --progress "$package"{,.sig} blackarch.db.tar.gz{,.sig} "$site:$sitedir/blackarch/$repo/os/$a"

	echo "releasing lock..."
	echo ssh blackarch.org "$(export -f unlock) unlock"
done
